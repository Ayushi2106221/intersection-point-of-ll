class Solution {
public:
    ListNode *getIntersectionNode(ListNode *head1, ListNode *head2) {
         if(head1==NULL || head2==NULL)
    return NULL;
    
    ListNode *temp=head1;
    //length of 1st ll
    int l1=0;
    while(temp){
        temp=temp->next;
        l1++;
    }
    //calculating length of 2nd ll
    temp=head2;
    int l2=0;
    while(temp){
        temp=temp->next;
        l2++;
    }
    
    int diff=abs(l1-l2);
    ListNode *temp1=head1;
    ListNode *temp2=head2;
    if(l1>l2){
        int count=0;
        while(count<diff){
            count++;
            temp1=temp1->next;
        }
        
    }
    else if(l2>l1){
        int cnt=0;
        while(cnt<diff){
            cnt++;
            temp2=temp2->next;
        }
    }
    
    while(temp1!=NULL && temp2!=NULL){
        if(temp1==temp2) return temp1;
        
        temp1=temp1->next;
        temp2=temp2->next;
    }
    return NULL;
    }
};
